pool:
  vmImage: 'Ubuntu-16.04'

trigger:
  - master
pr:
  - master

variables:
  TAG: $[format('{0:yyyyMMdd}.{1}', pipeline.startTime, counter(format('{0:yyyyMMdd}', pipeline.startTime), 1000))]
  DATE: $[format('{0:yyyy}-{0:MM}', pipeline.startTime)]

jobs:
- job: 'build'
  timeoutInMinutes: 0
  cancelTimeoutInMinutes: 2

  strategy:
    matrix:
      Lean342:
        LEAN_VERSION: '3.4.2'
      Lean350:
        LEAN_VERSION: 'nightly'
    maxParallel: 2

  steps:
  - task: CacheBeta@1
    displayName: Cache
    inputs:
      key: 'build | "$(Agent.OS)"'
      path: $(Pipeline.Workspace)/build
      restoreKeys: |
        build | "$(Agent.OS)"
        build

  - bash: |
      # source ~/.elan/env
      source scripts/setup_lean.sh
      wget -q https://raw.githubusercontent.com/leanprover-community/mathlib-tools/master/scripts/install_debian.sh && bash install_debian.sh ; rm -f install_debian.sh && source ~/.profile
      source ~/.profile
      chmod +x ~/.mathlib/bin/cache-olean
      echo $DATE
      # Write your commands here
      # TAG=snapshot-`date -u "+%Y-%m"`

      set -x

      mkdir -p build/snapshot-lean-$LEAN_VERSION
      mkdir -p build/root
      lean --run src/check.lean --makefile $LEAN_VERSION snapshot-lean-$LEAN_VERSION

      cp scripts/detect_errors.py build/snapshot-lean-$LEAN_VERSION/

      git config --global user.name "Build Bot"
      git clone --single-branch --branch snapshot https://$GITHUB_TOKEN@github.com/cipher1024/lean-depot.git snapshot
      mkdir -p snapshot/3.4.2
      mkdir -p snapshot/3.5.0
      mkdir -p snapshot/nightly
      cd build/snapshot-lean-$LEAN_VERSION
      pushd leanprover-community/mathlib
      cache-olean --fetch
      popd
      make -k || true
      cat Makefile
      cat snapshot.toml
      cat failure.toml

      cp snapshot.toml failure.toml ../../snapshot/$LEAN_VERSION/
      cd ../../snapshot
      git add $LEAN_VERSION/snapshot.toml $LEAN_VERSION/failure.toml
      git commit -m "new" || true
      git push origin snapshot || true
    env:
      GITHUB_TOKEN: $(GITHUB_TOKEN)

  - publish: build/
    artifact: binaries-$(LEAN_VERSION)
  - publish: snapshot/$(LEAN_VERSION)/
    artifact: snapshot-$(LEAN_VERSION)-$(TAG)

  # - task: DownloadBuildArtifacts@0
  #   inputs:
  #     buildType: 'current'
  #     downloadType: 'single'
  #     artifactName: 'drop'
  #     downloadPath: '$(System.ArtifactsDirectory)'

  # - task: PublishPipelineArtifact@1
  #   displayName: 'Publish Pipeline Artifact'
  #   inputs:
  #     targetPath: 'build/'
  #     artifact: 'Build result'

  # - task: PublishBuildArtifacts@1
  #   inputs:
  #     pathtoPublish: 'build/'
  #     artifactName: drop